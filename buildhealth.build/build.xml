<project name="buildhealth.build" default="all">

	<property name="projs" value="buildhealth.core,buildhealth.cli,buildhealth.ant" />
	<property name="version" value="0.1" />

	<taskdef resource="net/sf/antcontrib/antlib.xml" classpath="${basedir}/lib/ant-contrib-1.0b3.jar" />
	<taskdef resource="proguard/ant/task.properties" classpath="${basedir}/lib/proguard-4.9.jar" />

	<property name="build.dir" value="${basedir}/build" />
	<property name="build.tmp.dir" value="${build.dir}/tmp" />
	<property name="reports.dir" value="${build.dir}/reports" />

	<target name="all" description="Compile, test, pack and report">
		<delete dir="${build.dir}" quiet="true" />

		<antcall target="call-in-projs">
			<param name="target" value="all" />
		</antcall>

		<antcall target="cloc" />

		<antcall target="pack-cli" />
		<antcall target="pack-ant" />

		<antcall target="report" />
	</target>

	<target name="cloc">
		<delete file="${reports.dir}/cloc.files.csv" quiet="true" />

		<exec executable="perl" dir="${basedir}/.." failonerror="false" failifexecutionfails="false">
			<arg value="${basedir}/tools/cloc-1.58.pl" />
			<arg value="--by-file" />
			<arg value="--csv" />
			<arg value="--out=${reports.dir}/cloc.files.csv" />
			<arg value="--exclude-dir=build,tools,lib" />
			<arg value="." />
		</exec>
	</target>

	<target name="pack-cli">
		<delete dir="${build.tmp.dir}" quiet="true" />
		<mkdir dir="${build.tmp.dir}" />

		<for list="buildhealth.core,buildhealth.cli" param="proj">
			<sequential>
				<unzip dest="${build.tmp.dir}">
					<fileset dir="../@{proj}/build/dist">
						<include name="**/*.jar" />
						<exclude name="**/*-source.jar" />
					</fileset>
					<fileset dir="../@{proj}/lib">
						<include name="**/*.jar" />
						<exclude name="**/*-source.jar" />
						<exclude name="**/ivy-*.jar" />
						<exclude name="**/ant-*.jar" />
						<exclude name="**/junit-*.jar" />
						<exclude name="**/hamcrest-*.jar" />
						<exclude name="**/mockito-*.jar" />
					</fileset>
				</unzip>
			</sequential>
		</for>

		<delete dir="${build.tmp.dir}/META-INF" includeemptydirs="true">
			<exclude name="services/**" />
			<exclude name="*.default" />
		</delete>

		<delete dir="${build.dir}/buildhealth.cli.*" quiet="true" />

		<jar destfile="${build.dir}/buildhealth.cli.full-${version}.jar" filesetmanifest="mergewithoutmain">
			<manifest>
				<attribute name="Main-Class" value="org.pescuma.buildhealth.cli.BuildHealthCli" />
				<attribute name="Class-Path" value="." />
			</manifest>
			<fileset dir="${build.tmp.dir}" />
		</jar>

		<delete dir="${build.tmp.dir}" />

		<proguard>
			-libraryjars "${java.home}/lib/rt.jar"
			-injars      "${build.dir}/buildhealth.cli.full-${version}.jar"
			-outjars     "${build.dir}/buildhealth.cli-${version}.jar"
			-dontoptimize
			-dontobfuscate
			-dontwarn
				
			-keep class org.pescuma.buildhealth.cli.BuildHealthCli {*;}
			-keep class com.google.common.base.FinalizableReference {*;}
			-keep class org.jaxen.saxpath.base.XPathReader {*;}
			-keep class net.sf.saxon.dom.DOMObjectModel {*;}
			-keep class net.sf.saxon.event.MessageEmitter {*;}
			
			-dontnote **
		</proguard>
	</target>

	<target name="pack-ant">
		<delete dir="${build.tmp.dir}" quiet="true" />
		<mkdir dir="${build.tmp.dir}" />

		<for list="buildhealth.core,buildhealth.ant" param="proj">
			<sequential>
				<unzip dest="${build.tmp.dir}">
					<fileset dir="../@{proj}/build/dist">
						<include name="**/*.jar" />
						<exclude name="**/*-source.jar" />
					</fileset>
					<fileset dir="../@{proj}/lib">
						<include name="**/*.jar" />
						<exclude name="**/*-source.jar" />
						<exclude name="**/ivy-*.jar" />
						<exclude name="**/ant-*.jar" />
						<exclude name="**/junit-*.jar" />
						<exclude name="**/hamcrest-*.jar" />
						<exclude name="**/mockito-*.jar" />
					</fileset>
				</unzip>
			</sequential>
		</for>

		<delete dir="${build.tmp.dir}/META-INF" includeemptydirs="true">
			<exclude name="services/**" />
			<exclude name="*.default" />
		</delete>

		<delete dir="${build.dir}/buildhealth.ant.*" quiet="true" />

		<jar destfile="${build.dir}/buildhealth.ant.full-${version}.jar" filesetmanifest="mergewithoutmain">
			<fileset dir="${build.tmp.dir}" />
		</jar>

		<delete dir="${build.tmp.dir}" />

		<proguard>
			-libraryjars "${java.home}/lib/rt.jar"
			-injars      "${build.dir}/buildhealth.ant.full-${version}.jar"
			-outjars     "${build.dir}/buildhealth.ant-${version}.jar"
			-dontoptimize
			-dontobfuscate
			-dontwarn
				
			-keep class org.pescuma.buildhealth.ant.** {*;}
			-keep class com.google.common.base.FinalizableReference {*;}
			-keep class org.jaxen.saxpath.base.XPathReader {*;}
			-keep class net.sf.saxon.dom.DOMObjectModel {*;}
			-keep class net.sf.saxon.event.MessageEmitter {*;}
			
			-dontnote **
		</proguard>
	</target>

	<target name="report">
		<taskdef resource="org/pescuma/buildhealth/ant/antlib.xml" classpath="${build.dir}/buildhealth.ant-${version}.jar" />

		<buildhealth home="${reports.dir}/builhealth">
			<add-junit>
				<fileset dir="${basedir}/..">
					<include name="**/reports/junit/*.xml" />
				</fileset>
			</add-junit>
			<add-cloc file="${reports.dir}/cloc.files.csv" />
			<add-diskusage dir="${build.dir}" />
		</buildhealth>
	</target>

	<target name="clean" description="Delete all build results">
		<delete dir="${build.dir}" quiet="true" />

		<antcall target="call-in-projs">
			<param name="target" value="clean" />
		</antcall>
	</target>

	<target name="deps" description="Download dependencies needed to build">
		<antcall target="call-in-projs">
			<param name="target" value="deps" />
		</antcall>
	</target>

	<target name="call-in-projs">
		<for list="${projs}" param="proj">
			<sequential>
				<echo>Calling ${target} in @{proj}</echo>
				<ant antfile="../@{proj}/build.xml" target="${target}" inheritall="false">
					<property name="version" value="${version}" />
				</ant>
			</sequential>
		</for>
	</target>

</project>